<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于定时器setInterval和setTimeout清除的问题</title>
      <link href="/2019/08/04/content2/"/>
      <url>/2019/08/04/content2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><p><img src="http://www.005.tv/uploads/allimg/190725/66-1ZH515064R06.png" alt></p><p>本章讲述跑马灯效果实战中定时器清除的一些问题，以及踩过的诸多小坑。( <em>ps:跑马灯效果就是各大手机店门口上面 LED屏文字移动很<del>LOW</del>炫酷的效果</em> )</p><a id="more"></a><ul><li>我们先把页面样式做出来，定义两个按钮，一个用来启动定时器，另一个清除定时器。话不多说直接先上代码</li></ul><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">div</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"开始"</span> ></span></span><br><span class="line">    <span class="tag"><<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"停止"</span> ></span></span><br><span class="line">    <span class="tag"><<span class="name">h3</span>></span>小墨和小画,一个穿白衬衫,一个穿黑背心<span class="tag"><<span class="name">\h3</span>></span></span><br><span class="line"><span class="tag"><<span class="name">\div</span>></span></span><br></pre></td></tr></tbody></table></figure><ul><li>逻辑分析：给开始按钮绑定一个点击事件star()拿到msg字符串，然后调用字符串的substring来进行字符串的截取操作，把第一个字符截取出来，放到最后一个位置即可</li></ul><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">start</span><span class="params">()</span> </span>{</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//先获取文本内容</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> msg = <span class="built_in">document</span>.getElementById(<span class="string">"msg"</span>).textContent;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//截取msg第一个字符</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> first = msg.substring(<span class="number">0</span>,<span class="number">1</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//截取msg除开第一个字符剩余部分</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> other = msg.substring(<span class="number">1</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//重新拼接msg 将第一个字符移到最后一位</span></span></span><br><span class="line">        msg = other + first;</span><br><span class="line"><span class="actionscript">        <span class="comment">//渲染到页面</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"msg"</span>).innerText = msg;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(msg);</span></span><br><span class="line">    }</span><br><span class="line"><span class="handlebars"><span class="xml"> <span class="tag"><<span class="name">\script</span>></span></span></span></span><br></pre></td></tr></tbody></table></figure><ul><li>然后设置定时器每0.5秒执行一次，点击停止按钮清除定时器</li><li><strong>划重点！敲黑板</strong></li><li>一、为了让其他方法控制定时器的开关，所以要在全局设置一个定时器对象以供调用。</li><li>二、解决连续点击开始叠加多个定时器的坑(重要！)如果在函数内部声明定时器ID的话，每次clearInterval清除的都是值为null的timer并没有清除到上一个定时器的timer，所有就会产生回调堆积，越来越快</li></ul><figure class="highlight actionscript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">start</span><span class="params">()</span> </span>{</span><br><span class="line">       <span class="comment">//每次点击清除定时器</span></span><br><span class="line">       clearInterval(timer)</span><br><span class="line">       <span class="comment">//刚刚的代码内容我们用新的函数time()包裹起来</span></span><br><span class="line">       <span class="function"><span class="keyword">function</span> <span class="title">time</span><span class="params">()</span> </span>{...}</span><br><span class="line">       <span class="comment">// 设置定时器并赋值给timer</span></span><br><span class="line">      timer = setInterval(time,<span class="number">500</span>);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 清除定时器的方法</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">stop</span><span class="params">()</span> </span>{</span><br><span class="line">       clearInterval(timer);</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure><ul><li>别慌，上面的代码还有坑！虽然解决了定时器叠加的坑，但现在你会发现快速连续点击开始，文字会卡住不动，这是因为上个定时器开启后还没有执行你就清除了。解决这个坑我们就要利用timer来做个if判断。</li></ul><figure class="highlight actionscript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">start</span><span class="params">()</span> </span>{</span><br><span class="line">      <span class="comment">//在这里我们做个判断</span></span><br><span class="line">      <span class="keyword">if</span>(timer!=<span class="literal">null</span>)<span class="keyword">return</span></span><br><span class="line"><span class="comment">//不再执行下面代码</span></span><br><span class="line">          clearInterval(timer)</span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">time</span><span class="params">()</span> </span>{...}</span><br><span class="line">          timer = setInterval(time,<span class="number">500</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>现在不管怎么点都只会有一个定时器在运行了，你以为已经大功告成的时候往往是新坑到来的瞬间，点击开始后，点清除按钮清除定时器，再点开始这时候定时器无法启动了。</li><li>因为定时器开启后timer的值已经不是null了，清除定时器后没有返回给timer，再点击开始后if()判断一直为true。</li><li>我们需要将stop方法里clearInterval(timer)返回的值赋回给timer。</li></ul><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stop</span>(<span class="params"></span>) </span>{</span><br><span class="line">            timer = clearInterval(timer);</span><br><span class="line">            <span class="comment">//我们可以看看返回后的timer值</span></span><br><span class="line">            <span class="built_in">console</span>.log(timer);</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure><ul><li>以上就是我自己遇到的定时器的一些坑，希望能对你有帮助。</li></ul></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如鹿归林,如舟靠岸</title>
      <link href="/2019/07/29/content1/"/>
      <url>/2019/07/29/content1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><html><head></head><body><p><img src="https://sc02.alicdn.com/kf/Udf66af669b79442ebeeaf476f410a427a.jpg" alt="img"></p><p>这是我的第一篇文章,所以我就写得<del>宇宙超级无敌完美一点</del>一律从简吧。</p><hr><a id="more"></a><h3 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h3><h4 id="1-前端学习"><a href="#1-前端学习" class="headerlink" title="1. 前端学习"></a>1. 前端学习</h4><h5 id="认准wc3shool"><a href="#认准wc3shool" class="headerlink" title="认准wc3shool"></a>认准<a href="https://www.w3school.com.cn/" target="_blank" rel="noopener">wc3shool</a></h5><ul><li>js基础入门<del>到脱坑</del></li><li>jquery</li><li>http、ajax</li><li>nodejs</li><li><a href="https://cn.vuejs.org/" target="_blank" rel="noopener">vue</a>、react</li></ul><h4 id="2-后端了解涉猎"><a href="#2-后端了解涉猎" class="headerlink" title="2. 后端了解涉猎"></a>2. 后端了解涉猎</h4><ul><li>多线程、高并发</li><li>hashMap</li><li>lazyload</li></ul><h4 id="3-Go语言"><a href="#3-Go语言" class="headerlink" title="3. Go语言"></a>3. Go语言</h4><ul><li><a href="https://golang.org/" target="_blank" rel="noopener">Go</a>（又称Golang）是Google开发的一种静态强类型、编译型、并发型，并具有垃圾回收功能的编程语言。<br>罗伯特·格瑞史莫（Robert Griesemer），罗勃·派克（Rob Pike）及肯·汤普逊（Ken Thompson）于2007年9月开始设计Go，稍后Ian Lance Taylor、Russ Cox加入项目。Go是基于Inferno操作系统所开发的。Go于2009年11月正式宣布推出，成为开放源代码项目，并在Linux及Mac OS X平台上进行了实现，后来追加了Windows系统下的实现。在2016年，Go被软件评价公司TIOBE 选为“TIOBE 2016 年最佳语言”。<br>emmmm,教练~我想学这个！</li></ul></body></html>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
